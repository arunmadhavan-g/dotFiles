alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias gll="tig"
alias gl="git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) %C(white)%s%C(reset) -%C(yellow) %an, %cn%C(reset)%C(bold red)%d%C(reset) %C(green)[%ar]%C(reset) ' --all"
alias gpr='git pull --rebase'
alias gpom='git push origin master'
alias gsw='git show'
alias gpp='git pull --rebase && git push'
alias gc='git commit -v'
alias gcma='git commit --amend'
alias gcm='git commit -m'
alias gco='git checkout'
alias gcom='git checkout master'
alias gcoa='git checkout alpha'
alias gcod='git checkout develop'
alias gcos='git checkout staging'
alias gr='git remote'
alias grv='git remote -v'
alias grvt='git revert'
alias grmv='git remote rename'
alias grrm='git remote remove'
alias grset='git remote set-url'
alias grup='git remote update'
alias grbd='git rebase develop'
alias grbi='git rebase -i'
alias grbc='git rebase --continue'
alias grba='git rebase --abort'
alias gb='git branch'
alias gbn='git branch -e' #create a new branch
alias gbD='git branch -D' # delete an existing branch on your local
alias gbd='git branch -d' # delete an existing branch on your local
alias gba='git branch -a' # list all branches including remotes
alias gwho="git shortlog --format='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --email"
alias gcl='git config --list' #list all configuration for the rep
alias gcp='git cherry-pick'
alias gss='git status -s'
alias ga='git add'
alias gap='git add -N  && git add -p'
alias gaa='git add -A'
alias gm='git merge'
alias gmm='git merge master'
alias gmd='git merge develop'
alias grh='git reset --hard'
alias gclean='git reset --hard && git clean -dfx'
alias gwc='git whatchanged -p --abbrev-commit --pretty=medium'
alias gsts='git stash show --text'
alias gst='git stash'
alias gstp='git stash pop'
alias gstd='git stash drop'
alias gi='git remote show origin'
alias gn='git cherry -v --abbrev | tac'
alias gcln='git clone'
alias gclnc='git clone `pbpaste`'
alias fixgitignore='git rm -r --cached . && git add . && git commit -m "Fixing gitignore"'
alias gpomf='git push -f origin master'
alias guns='git reset .'
alias gunc='git reset HEAD~1'
alias gbg='git bisect good'
alias gbb='git bisect bad'
alias herokudep='git push heroku master'
alias gpbr='git remote prune origin' 
function gpbl() {
	git fetch -p && for branch in `git branch -vv | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done
}
function update-forked-repo() {
    git remote add upstream $1
    git fetch upstream
    git checkout master
    git rebase upstream/master
}

#!/bin/bash

# Generates git changelog grouped by day
#
# optional parameters
# -a, --author       to filter by author
# -s, --since        to select start date
# -u, --until        to select end date

timesheet () {
  local NEXT=$(date +%F)

  local SINCE='1970-01-01'
  local UNTIL=`date +%Y-%m-%d`

  for i in "$@"
  do
  case $i in
    -a=*|--author=*)
    local AUTHOR="${i#*=}"
    shift
    ;;
    -s=*|--since=*)
    SINCE="${i#*=}"
    shift
    ;;
    -u=*|--until=*)
    UNTIL="${i#*=}"
    shift
    ;;
    *)
      # unknown option
    ;;
  esac
  done

  local LOG_FORMAT=" * %s"
  
  if [ -z "$AUTHOR" ]
  then
    LOG_FORMAT="$LOG_FORMAT (%an)"
  else
    echo 
    echo -e "Logs filtered by author: ${AUTHOR}"
  fi

  git log --no-merges --author="\(${AUTHOR}\)" --since="${SINCE}" --until="${UNTIL}" --format="%cd" --date=short | sort -u | while read DATE ; do

    local GIT_PAGER=$(git log --no-merges --reverse --format="${LOG_FORMAT}" --since="${DATE} 00:00:00" --until="${DATE} 23:59:59" --author="${AUTHOR} ")

    if [ ! -z "$GIT_PAGER" ]
    then
      echo
      echo -e "[$DATE]"
      echo -e "${GIT_PAGER}"
    fi

  done
}
